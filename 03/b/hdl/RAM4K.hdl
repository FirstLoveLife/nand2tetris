// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[0..2], a = a0, b = b0, c = c0, d = d0, e = e0, f = f0, g = g0, h = h0);
    RAM512(in = in, load = a0, address = address[3..11], out = o1);
    RAM512(in = in, load = b0, address = address[3..11], out = o2);
    RAM512(in = in, load = c0, address = address[3..11], out = o3);
    RAM512(in = in, load = d0, address = address[3..11], out = o4);
    RAM512(in = in, load = e0, address = address[3..11], out = o5);
    RAM512(in = in, load = f0, address = address[3..11], out = o6);
    RAM512(in = in, load = g0, address = address[3..11], out = o7);
    RAM512(in = in, load = h0, address = address[3..11], out = o8);
    Mux8Way16(a = o1, b = o2, c = o3, d = o4, e = o5, f = o6, g = o7, h = o8, sel = address[0..2], out = out); 
}
